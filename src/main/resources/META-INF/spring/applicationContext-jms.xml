<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" xmlns:amq="http://activemq.apache.org/schema/core" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jms="http://www.springframework.org/schema/jms" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd                http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd   http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd">

    <bean id="jmsFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
        <property name="brokerURL" value="vm://localhost:61616"/>
    </bean>
    <!-- JMS ConnectionFactory to use for Spring JMS template -->
    <bean class="org.springframework.jms.connection.CachingConnectionFactory" id="cachingConnectionFactory">
        <property name="targetConnectionFactory">
            <ref local="jmsFactory"/>
        </property>
    </bean>
    <!-- Spring JMS Template -->
    <bean id="sendTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <property name="physicalName" value="jms.topic.JmsUtil"/>
    </bean>
    <bean id="receiveTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <property name="physicalName" value="jms.topic.JmsUtil"/>
    </bean>
    <bean id="sendQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <property name="physicalName" value="jms.topic.JmsUtil"/>
    </bean>
    <bean id="receiveQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <property name="physicalName" value="jms.topic.JmsUtil"/>
    </bean>
    <bean class="org.springframework.jms.core.JmsTemplate" id="jmsTemplate">
        <!-- lets wrap in a pool to avoid creating a connection per send -->
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="defaultDestinationName" value="jms.topic.JmsUtil"/>
    </bean>
    <!--<amq:topic id="jms.topic.JmsUtil" physicalName="jms.topic.JmsUtil"/>-->

    <!--<jms:listener-container client-id="listenerContainer" connection-factory="jmsFactory" destination-type="queue" receive-timeout="5000000" >-->
        <!--<jms:listener destination="jms.topic.JmsUtil" method="onMessage" ref="jmsUtilTopicListener"/>-->
    <!--</jms:listener-container>-->
    <!--<bean id="messageReceiveService" class="ru.sberbank.jms.util.messaging.MesssageReceiveServiceImpl" ></bean>-->
    <bean class="ru.sberbank.jms.util.messaging.JmsUtilTopicListener" id="jmsUtilTopicListener"/>

    <!--<bean id="receiveService" class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean"-->
            <!--p:connectionFactory-ref="jmsFactory"-->
            <!--p:queueName="jms.topic.JmsUtil"-->
            <!--p:serviceInterface="ru.sberbank.jms.util.messaging.MessageReceiveService"-->
            <!--p:receiveTimeout="20000"-->
            <!-->-->
    <!--</bean>-->
    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsFactory"/>
        <property name="destinationName" value="jms.topic.JmsUtil"/>
        <property name="messageListener" ref="jmsUtilTopicListener"/>
        <property name="receiveTimeout" value="1000"/>
        <property name="recoveryInterval" value="1000"/>
        <property name="pubSubDomain" value="false"/>
        <property name="autoStartup" value="false"/>
    </bean>


</beans>
